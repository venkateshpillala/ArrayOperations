class ArraySort{
    int []bubbleSort(int a[]){
        
        for(int i=0;i<a.length;i++){
          for(int j=i+1;j<a.length-i;j++){
              if(a[i]>a[j]){
                  int temp=a[i];
                  a[i]=a[j];
                  a[j]=temp;
              }
          }
        }
        
        return a;
    }
    
    int []selectionSort(int a[]){
        
        for(int i=0;i<a.length;i++){
            int minIndex=i;
            for(int j=i+1;j<a.length;j++){
                if(a[minIndex]>a[j]){
                    minIndex=j;
                }
            }
          int temp=a[i];
          a[i]=a[minIndex];
          a[minIndex]=temp;
        }
        return a;
    }
    
    int []insertionSort(int a[]){
        for(int i=0;i<a.length;i++){
            int temp=a[i];
            int j=i-1;
            while(j>=0&&temp<a[j]){
                a[j+1]=a[j];
                j--;
            }
            a[j+1]=temp;
        }
        return a;
    }
    
    int partition(int a[],int start,int end){
    
        int pivot=a[end];
        int i=start-1;
        for(int j=start;j<a.length;j++){
            if(a[j]<pivot){
                i++;
                int temp=a[i];
                a[i]=a[j];
                a[j]=temp;
            }
        }
        int temp=a[end];
        a[end]=a[i+1];
        a[i+1]=temp;
        return i+1;
    }
    
    int[] quickSort(int a[],int start,int end){
        int i=start,j=end;
        if(i<j){
            int p=partition(a,start,end);
            quickSort(a,start,p-1);
            quickSort(a,p+1,end);
        }
        return a;
    }
    void merge(int a[],int start,int mid,int end){
        
        int n1=mid-start+1;
        int n2=end-mid;
        int []L=new int[n1];
        int []R=new int[n2];
        for(int i=0;i<n1;i++){
            L[i]=a[i+start];
        }
        for(int j=0;j<n2;j++){
            R[j]=a[mid+j+1];
        }
        int i=0,j=0,k=start;
        while(i<n1&&j<n2){
            if(L[i]<=R[j]){
                a[k]=L[i];
                i++;
            }
            else{
                a[k]=R[j];
                j++;
            }
            k++;
        }
        while(i<n1){
            a[k]=L[i];
            i++;
            k++;
        }
        while(j<n2){
            a[k]=R[j];
            j++;
            k++;
        }
    }
    int [] mergeSort(int a[],int start,int end){
        int i=start,j=end;
        if(i<j){
            int mid=(start+end-1)/2;
            mergeSort(a,start,mid-1);
            mergeSort(a,mid+1,end);
            merge(a,start,mid,end);
        }
        return a;
    }
}
class Main{
    public static void main(String args[]){
        int a[]={4,2,3,1,5,7};
        ArraySort c=new ArraySort();
      a= c.mergeSort(a,0,a.length-1);
        for(int i:a){
            System.out.print(" "+i);
        }
    }
}